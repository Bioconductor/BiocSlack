---
title: "Slack channels"
subtitle: "Explore our Slack channels at [https://slack.bioconductor.org/](https://slack.bioconductor.org/) and join conversations that interest you. Our table below lists all public channels, updated daily at midnight UTC, and shows the date of the last activity (message or thread reply) alongside how recent the activity was at the time of the last update. These channels are open to everyone interested in Bioconductor to participate and learn together."
date: now
date-format: "DD MMMM YYYY, HH:mm[Z]"
format: 
  html: 
    template-partials:
      - title-block.html
    grid:
      sidebar-width: 0px
      body-width: 2000px
      margin-width: 0px
      gutter-width: 1.5rem
editor: visual
execute:
  message: false
  warning: false
  echo: false
css: styles.css
---

```{r}
library(slackr)
library(dplyr)
library(tidyr)
library(lubridate)
library(purrr)
library(reactable)
```

```{r}
# Retrieve a list of all public Bioconductor Slack channels
# Exclude archived channels and unnest topic and purpose details

sc <- slackr_channels(token = Sys.getenv("SLACK_TOKEN"), exclude_archived = TRUE) |>
  filter(!is_private) |>
  unnest(cols = c(topic, purpose), names_sep = "_") |>
  mutate(created = as_date(as_datetime(created))) |> # Convert creation timestamp to readable date
  select(id, name, topic_value, purpose_value, created, num_members)
```

```{r}
# Fetch message history for each public channel using Slack API
# Collect data into a single dataframe for processing

sm <-
  map_dfr(
    .x = set_names(sc$id),
    .f = ~ slackr_history(channel = .x, token = Sys.getenv("SLACK_TOKEN"), message_count = 100),
    .id = "id"
  )
```

```{r}
# Process message data to find the latest activity for each channel
# Compare latest message and thread reply to determine the most recent

sm_latest <- sm |>
  filter(is.na(subtype) | subtype %in% c("thread_broadcast", "bot_message")) |>
  separate(ts, c("ts_formatted", NA)) |>
  mutate(
    latest = as_datetime(as.integer(ts_formatted), tz = "UTC"), # Latest message timestamp
    latest_reply = as_datetime(as.integer(root$latest_reply), tz = "UTC"), # Latest reply in a thread
    final_latest = pmax(latest, latest_reply, na.rm = TRUE), # Determine the most recent activity
    TimeDiff = difftime(now("UTC"), final_latest, units = "mins"),
    # Calculate time difference and format for display
   `Last Activity` = paste(format(final_latest, "%Y-%m-%d %H:%M %Z"), " (", 
                            case_when(
                              TimeDiff < 60 ~ paste0(round(TimeDiff), " mins ago"),
                              TimeDiff < 1440 ~ paste0(round(TimeDiff / 60), " hours ago"),
                              TimeDiff < 43200 ~ paste0(round(TimeDiff / 1440), " days ago"),
                              TimeDiff < 525600 ~ paste0(round(TimeDiff / 43200), " months ago"),
                              TRUE ~ paste0(round(TimeDiff / 525600), " years ago"), 
                            ), ")", 
                            sep = "")
  ) |>
  group_by(id) |>
  slice_max(final_latest) |>
  ungroup()
```

```{r}
# Combine channel information with the latest activity data
# Prepare final dataset for table visualisation

all <- left_join(sc, sm_latest, by = "id") |>
  select(name.x, topic_value, purpose_value, num_members, created, `Last Activity`) |>
  rename(Name = name.x, Topic = topic_value, Description = purpose_value, `Number of Members` = num_members, `Created` = created)
```

```{r}
# Create a searchable and sortable table using Reactable
# Configures visual aspects of the table for better readability

all |>
  reactable(
    columns = list(
      Topic = colDef(minWidth = 300),
      Description = colDef(minWidth = 300),
      `Last Activity` = colDef(defaultSortOrder = "desc") # Enable HTML rendering for Last Activity
    ),
    outlined = TRUE,
    bordered = TRUE,
    resizable = TRUE,
    striped = TRUE,
    searchable = TRUE,
    defaultPageSize = 200
  )
```

[![](https://github.githubassets.com/favicon.ico)](https://github.com/mblue9/BiocSlack)
